/* package codechef; // don't place package name! 

Like most users, Chef didn’t know that he could add problems to a personal to-do list by clicking on the magic '+' symbol on the top-right of each problem page. But once he found out about it, he went crazy and added loads of problems to his to-do list without looking at their difficulty rating.

Chef is a beginner and should ideally try and solve only problems with difficulty rating strictly less than 
1000
1000. Given a list of difficulty ratings for problems in the Chef’s to-do list, please help him identify how many of those problems Chef should remove from his to-do list, so that he is only left with problems of difficulty rating less than 
1000
1000.

Input Format
The first line of input will contain a single integer 
�
T, the number of test cases. Then the testcases follow.
Each testcase consists of 2 lines of input.
The first line of input of each test case contains a single integer, 
�
N, which is the total number of problems that the Chef has added to his to-do list.
The second line of input of each test case contains 
�
N space-separated integers 
�
1
,
�
2
,
…
,
�
�
D 
1
​
 ,D 
2
​
 ,…,D 
N
​
 , which are the difficulty ratings for each problem in the to-do list.
Output Format
For each test case, output in a single line the number of problems that Chef will have to remove so that all remaining problems have a difficulty rating strictly less than 
1000
1000.

Constraints
1
≤
�
≤
1000
1≤T≤1000
1
≤
�
≤
1000
1≤N≤1000
1
≤
�
�
≤
5000
1≤D 
i
​
 ≤5000
Subtasks
Subtask 1 (100 points):
Original constraints
Sample 1:
Input
Output
5
3
800 1200 900
4
999 1000 1001 1002
5
1 2 2 2 5000
5
1000 1000 1000 1000 1000
3
900 700 800
1
3
1
5
0
Explanation:
Test case 
1
1: Among the three difficulty ratings, Chef only needs to remove the problem with difficulty rating 
1200
1200, since it is 
≥
1000
≥1000. So, the answer is 
1
1.

Test case 
2
2: Among the four difficulty ratings, Chef needs to remove the problems with difficulty ratings of 
1000
1000, 
1001
1001, and 
1002
1002, since they are 
≥
1000
≥1000. So, the answer is 
3
3.

Test case 
3
3: Among the five difficulty ratings, Chef needs to remove the problem with a difficulty rating of 
5000
5000, since it is 
≥
1000
≥1000. So, the answer is 
1
1.

Test case 
4
4: Chef needs to remove all the five problems, since they are all rated 
≥
1000
≥1000. So, the answer is 
5
5.

Test case 
5
5: Chef does not need to remove any problem, since they are all rated 
<
1000
<1000. So, the answer is 
0
0.
*/

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		Scanner sc=new Scanner(System.in);
		int t=sc.nextInt();
		
		for(int i=0;i<t;i++){
		    int cnt=0;
		    int n=sc.nextInt();
		    int arr[]=new int[n];
		    for(int j=0;j<n;j++){
		        arr[j]=sc.nextInt();
                
                if(arr[j]>=1000){
                    cnt++;
                }  
		    }
		    System.out.println(cnt);
		}
	    
	}
}
